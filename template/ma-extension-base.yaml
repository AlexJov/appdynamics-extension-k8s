apiVersion: apps/v1
kind: Deployment
metadata:
  name: machine-agent-extension
  namespace: appdynamics
spec:
  selector:
    matchLabels:
      name: machine-agent-extension
  template: 
    metadata: 
      labels: 
        name: machine-agent-extension
    spec:
      initContainers:
      - name: init-appdynamics-extensions
        command: ["sh", "-c", "cp -r /extensions/. /tmp/appd/"]
        image: ##TAG##
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /tmp/appd
          name: tmp-appd

      containers:
      - name: machine-agent-extension
        image: docker.io/appdynamics/machine-agent-analytics:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: appd-key
              name: appd-secret
        envFrom:
        - configMapRef:
            name: ma-config
        command: ["/bin/sh"]
        args: ["-c", "cp -r /tmp/appd/* /opt/appdynamics/monitors/ && cp -fr /tmp/extension-config/extensions/* /opt/appdynamics/monitors/ && ./startup.sh"]
          
        envFrom:
        - configMapRef:
            name: ma-config
        resources: {}
        volumeMounts:
        - name: ma-log-volume
          mountPath: /opt/appdynamics/conf/logging/log4j.xml
          subPath: log4j.xml
        - mountPath: /tmp/appd
          name: tmp-appd
        - mountPath: /tmp/extension-config
          name: extension-config

      restartPolicy: Always

      volumes:
        - name: ma-log-volume
          configMap:
            name: ma-log-config
        - name: tmp-appd
          emptyDir: {}
        - name: extension-config
          configMap:
            name: ma-extension-config
            items:
